"""
This type stub file was generated by pyright.
"""

from typing import Any, List, Literal, Optional, Union
from langchain_text_splitters.base import Language, TextSplitter

class CharacterTextSplitter(TextSplitter):
    """Splitting text that looks at characters."""
    def __init__(self, separator: str = ..., is_separator_regex: bool = ..., **kwargs: Any) -> None:
        """Create a new TextSplitter."""
        ...
    
    def split_text(self, text: str) -> List[str]:
        """Split incoming text and return chunks."""
        ...
    


class RecursiveCharacterTextSplitter(TextSplitter):
    """Splitting text by recursively look at characters.

    Recursively tries to split by different characters to find one
    that works.
    """
    def __init__(self, separators: Optional[List[str]] = ..., keep_separator: Union[bool, Literal["start", "end"]] = ..., is_separator_regex: bool = ..., **kwargs: Any) -> None:
        """Create a new TextSplitter."""
        ...
    
    def split_text(self, text: str) -> List[str]:
        """Split the input text into smaller chunks based on predefined separators.

        Args:
            text (str): The input text to be split.

        Returns:
            List[str]: A list of text chunks obtained after splitting.
        """
        ...
    
    @classmethod
    def from_language(cls, language: Language, **kwargs: Any) -> RecursiveCharacterTextSplitter:
        """Return an instance of this class based on a specific language.

        This method initializes the text splitter with language-specific separators.

        Args:
            language (Language): The language to configure the text splitter for.
            **kwargs (Any): Additional keyword arguments to customize the splitter.

        Returns:
            RecursiveCharacterTextSplitter: An instance of the text splitter configured
            for the specified language.
        """
        ...
    
    @staticmethod
    def get_separators_for_language(language: Language) -> List[str]:
        """Retrieve a list of separators specific to the given language.

        Args:
            language (Language): The language for which to get the separators.

        Returns:
            List[str]: A list of separators appropriate for the specified language.
        """
        ...
    


